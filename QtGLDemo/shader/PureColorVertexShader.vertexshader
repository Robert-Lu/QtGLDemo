#version 330 core
layout (location = 0) in vec3 position;
layout (location = 1) in vec3 color;
// layout (location = 2) in vec3 normal;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

out vec3 objectColor; // to fragment shader
// out vec3 Normal;      // to fragment shader
// out vec3 FragPos;

void main()
{
    gl_Position = projection * view * model * vec4(position, 1.0f);

    objectColor = color;
    // Normal = mat3(transpose(inverse(model))) * normal;
    // FragPos = vec3(model * vec4(position, 1.0f));
}